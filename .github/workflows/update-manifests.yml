name: Update Winget Manifests

# Grant write permission to repository contents only.
permissions:
  contents: write
  pull-requests: write

on:
  schedule:
    - cron: '0 0 * * *'         # Runs daily at midnight UTC
  workflow_dispatch:            # Allows manual triggering

jobs:
  update:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Copy required files from Scripts folder
        shell: pwsh
        run: |
          if (!(Test-Path "$env:GITHUB_WORKSPACE\Scripts")) {
              Write-Error "Scripts folder not found in repository"
              exit 1
          }
          # Copy winget_ids.txt, last_checked.json, and the .komac folder to the repository root.
          Copy-Item -Path "$env:GITHUB_WORKSPACE\Scripts\winget_ids.txt" -Destination "$env:GITHUB_WORKSPACE\winget_ids.txt" -Force
          Copy-Item -Path "$env:GITHUB_WORKSPACE\Scripts\last_checked.json" -Destination "$env:GITHUB_WORKSPACE\last_checked.json" -Force
          Copy-Item -Path "$env:GITHUB_WORKSPACE\Scripts\.komac" -Destination "$env:GITHUB_WORKSPACE\.komac" -Recurse -Force
        working-directory: ${{ github.workspace }}

      - name: Install WinGet and Related Tools
        shell: pwsh
        run: |
          Install-Module -Name Microsoft.WinGet.Client -Force -Scope CurrentUser -Repository PSGallery
          Repair-WinGetPackageManager -Latest -AllUsers -Verbose
          winget settings --enable LocalManifestFiles
          winget --info
          winget install wingetcreate --disable-interactivity --accept-source-agreements --accept-package-agreements
          wingetcreate info
          Copy-Item -Path wingetcreate_settings.json -Destination "$env:LOCALAPPDATA\Packages\Microsoft.WindowsPackageManagerManifestCreator_8wekyb3d8bbwe\LocalState\settings.json" -Force
          winget install komac --scope machine --disable-interactivity --accept-source-agreements --accept-package-agreements
          $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
        working-directory: Automations

      - name: Setup PowerShell Modules
        shell: pwsh
        run: |
          if (-not (Get-Module -ListAvailable -Name powershell-yaml)) {
              Install-Module -Name powershell-yaml -Scope CurrentUser -Force -AllowClobber
          }
          if (-not (Get-Module -ListAvailable -Name PSWinget)) {
              Install-Module -Name PSWinget -Scope CurrentUser -Force -AllowClobber
          }
          Write-Host "Required modules installed."

      - name: Run Update Script
        shell: pwsh
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
          KOMAC_PATH: 'C:\Program Files\Komac\bin\Komac.exe'
        run: |
          .\Scripts\CheckAndUpdateFromWingetManifest.ps1

      - name: Create Pull Request for Updated Files
        if: always()
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update manifest state files via GitHub Action"
          title: "Update manifest state files"
          body: "Automated update of manifest state files (last_checked.json and .komac) by GitHub Action."
          branch: "update/winget-manifests-${{ github.run_id }}"
          base: main
          labels: "winget-update"
          delete-branch: true

      - name: Reset workflow file changes (if any)
        shell: pwsh
        run: |
          # Exclude any accidental changes to workflow files.
          git reset HEAD .github/workflows/*
          git status
